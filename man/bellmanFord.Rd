% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bellmanFord.R
\name{bellmanFord}
\alias{bellmanFord}
\title{Bellman-Ford Algorithm}
\usage{
bellmanFord(graph, from, to)
}
\arguments{
\item{graph}{The \code{igraph} object.}

\item{from}{Source node}

\item{to}{Target node}
}
\description{
Use the Bellman-Ford algorithm to calculate the shortest path from a source vertex
to a target vertex in a directed, weighted graph
}
\details{
The Bellman-Ford algorithm is a single source algorithm which can in
contrast to the Dijkstra's and A*-Search algorithms deal with negative edge
weights (Note in order to find the right shortest path it is required that
no negative-weight cycle exist in the graph).
The algorithm automatically detects negative-weight cycles and shows a corresponding error message.

Like Dijkstra, the algorithm is based on the principle of the relaxation.
Wheres Dijkstra greedily select the closest vertex, the Bellmanâ€“Ford algorithm simply relaxes
all the edges (|V|-1 times). Thus, Bellman-Ford has a runtime of V*E(number of edges of a graph)
}
\examples{
  g <- randomGraph(6,euclidean=FALSE)

  bf <- bellmanFord(g)

  plot(bf)

  for(step in bf){
  print(step$min_dists)
  }
}

